#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinGrep.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Vetmaster")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    partial void InsertInventoryCategory(InventoryCategory instance);
    partial void UpdateInventoryCategory(InventoryCategory instance);
    partial void DeleteInventoryCategory(InventoryCategory instance);
    partial void InsertSaleDetail(SaleDetail instance);
    partial void UpdateSaleDetail(SaleDetail instance);
    partial void DeleteSaleDetail(SaleDetail instance);
    partial void InsertCompanyInfo(CompanyInfo instance);
    partial void UpdateCompanyInfo(CompanyInfo instance);
    partial void DeleteCompanyInfo(CompanyInfo instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::WinGrep.Properties.Settings.Default.VetmasterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Inventory> Inventories
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
		
		public System.Data.Linq.Table<InventoryCategory> InventoryCategories
		{
			get
			{
				return this.GetTable<InventoryCategory>();
			}
		}
		
		public System.Data.Linq.Table<SaleDetail> SaleDetails
		{
			get
			{
				return this.GetTable<SaleDetail>();
			}
		}
		
		public System.Data.Linq.Table<CompanyInfo> CompanyInfos
		{
			get
			{
				return this.GetTable<CompanyInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private int _TaxID;
		
		private int _UnitID;
		
		private System.Nullable<int> _ScheduleID;
		
		private string _Description;
		
		private string _Code;
		
		private string _BarCode;
		
		private bool _Grouped;
		
		private bool _ItemPricing;
		
		private bool _ShowItems;
		
		private bool _ShowItemPricing;
		
		private decimal _UnitPriceExclusive;
		
		private decimal _MarkUp;
		
		private decimal _SellingPriceExclusive;
		
		private decimal _SellingTaxAmount;
		
		private decimal _SellingPriceInclusive;
		
		private bool _TrackLevels;
		
		private int _ReOrderLevel;
		
		private decimal _MaxLevel;
		
		private decimal _OnHand;
		
		private bool _Discontinued;
		
		private string _Comment;
		
		private string _DosageInterval;
		
		private int _OrderFactor;
		
		private string _FactorName;
		
		private System.DateTime _CreateDate;
		
		private bool _CreateSaleReminder;
		
		private string _ReminderMessage;
		
		private int _ReminderDays;
		
		private int _ReminderLeadDays;
		
		private bool _ApplyLoyalty;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private int _BranchID;
		
		private bool _CheckBatch;
		
		private EntitySet<InventoryCategory> _InventoryCategories;
		
		private EntityRef<SaleDetail> _SaleDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnTaxIDChanging(int value);
    partial void OnTaxIDChanged();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnScheduleIDChanging(System.Nullable<int> value);
    partial void OnScheduleIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnGroupedChanging(bool value);
    partial void OnGroupedChanged();
    partial void OnItemPricingChanging(bool value);
    partial void OnItemPricingChanged();
    partial void OnShowItemsChanging(bool value);
    partial void OnShowItemsChanged();
    partial void OnShowItemPricingChanging(bool value);
    partial void OnShowItemPricingChanged();
    partial void OnUnitPriceExclusiveChanging(decimal value);
    partial void OnUnitPriceExclusiveChanged();
    partial void OnMarkUpChanging(decimal value);
    partial void OnMarkUpChanged();
    partial void OnSellingPriceExclusiveChanging(decimal value);
    partial void OnSellingPriceExclusiveChanged();
    partial void OnSellingTaxAmountChanging(decimal value);
    partial void OnSellingTaxAmountChanged();
    partial void OnSellingPriceInclusiveChanging(decimal value);
    partial void OnSellingPriceInclusiveChanged();
    partial void OnTrackLevelsChanging(bool value);
    partial void OnTrackLevelsChanged();
    partial void OnReOrderLevelChanging(int value);
    partial void OnReOrderLevelChanged();
    partial void OnMaxLevelChanging(decimal value);
    partial void OnMaxLevelChanged();
    partial void OnOnHandChanging(decimal value);
    partial void OnOnHandChanged();
    partial void OnDiscontinuedChanging(bool value);
    partial void OnDiscontinuedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDosageIntervalChanging(string value);
    partial void OnDosageIntervalChanged();
    partial void OnOrderFactorChanging(int value);
    partial void OnOrderFactorChanged();
    partial void OnFactorNameChanging(string value);
    partial void OnFactorNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateSaleReminderChanging(bool value);
    partial void OnCreateSaleReminderChanged();
    partial void OnReminderMessageChanging(string value);
    partial void OnReminderMessageChanged();
    partial void OnReminderDaysChanging(int value);
    partial void OnReminderDaysChanged();
    partial void OnReminderLeadDaysChanging(int value);
    partial void OnReminderLeadDaysChanged();
    partial void OnApplyLoyaltyChanging(bool value);
    partial void OnApplyLoyaltyChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnCheckBatchChanging(bool value);
    partial void OnCheckBatchChanged();
    #endregion
		
		public Inventory()
		{
			this._InventoryCategories = new EntitySet<InventoryCategory>(new Action<InventoryCategory>(this.attach_InventoryCategories), new Action<InventoryCategory>(this.detach_InventoryCategories));
			this._SaleDetail = default(EntityRef<SaleDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._SaleDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="Int NOT NULL")]
		public int TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this.OnTaxIDChanging(value);
					this.SendPropertyChanging();
					this._TaxID = value;
					this.SendPropertyChanged("TaxID");
					this.OnTaxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
		public int UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int")]
		public System.Nullable<int> ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="VarChar(50)")]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grouped", DbType="Bit NOT NULL")]
		public bool Grouped
		{
			get
			{
				return this._Grouped;
			}
			set
			{
				if ((this._Grouped != value))
				{
					this.OnGroupedChanging(value);
					this.SendPropertyChanging();
					this._Grouped = value;
					this.SendPropertyChanged("Grouped");
					this.OnGroupedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPricing", DbType="Bit NOT NULL")]
		public bool ItemPricing
		{
			get
			{
				return this._ItemPricing;
			}
			set
			{
				if ((this._ItemPricing != value))
				{
					this.OnItemPricingChanging(value);
					this.SendPropertyChanging();
					this._ItemPricing = value;
					this.SendPropertyChanged("ItemPricing");
					this.OnItemPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowItems", DbType="Bit NOT NULL")]
		public bool ShowItems
		{
			get
			{
				return this._ShowItems;
			}
			set
			{
				if ((this._ShowItems != value))
				{
					this.OnShowItemsChanging(value);
					this.SendPropertyChanging();
					this._ShowItems = value;
					this.SendPropertyChanged("ShowItems");
					this.OnShowItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowItemPricing", DbType="Bit NOT NULL")]
		public bool ShowItemPricing
		{
			get
			{
				return this._ShowItemPricing;
			}
			set
			{
				if ((this._ShowItemPricing != value))
				{
					this.OnShowItemPricingChanging(value);
					this.SendPropertyChanging();
					this._ShowItemPricing = value;
					this.SendPropertyChanged("ShowItemPricing");
					this.OnShowItemPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPriceExclusive", DbType="Money NOT NULL")]
		public decimal UnitPriceExclusive
		{
			get
			{
				return this._UnitPriceExclusive;
			}
			set
			{
				if ((this._UnitPriceExclusive != value))
				{
					this.OnUnitPriceExclusiveChanging(value);
					this.SendPropertyChanging();
					this._UnitPriceExclusive = value;
					this.SendPropertyChanged("UnitPriceExclusive");
					this.OnUnitPriceExclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkUp", DbType="Decimal(18,10) NOT NULL")]
		public decimal MarkUp
		{
			get
			{
				return this._MarkUp;
			}
			set
			{
				if ((this._MarkUp != value))
				{
					this.OnMarkUpChanging(value);
					this.SendPropertyChanging();
					this._MarkUp = value;
					this.SendPropertyChanged("MarkUp");
					this.OnMarkUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingPriceExclusive", DbType="Decimal(18,8) NOT NULL")]
		public decimal SellingPriceExclusive
		{
			get
			{
				return this._SellingPriceExclusive;
			}
			set
			{
				if ((this._SellingPriceExclusive != value))
				{
					this.OnSellingPriceExclusiveChanging(value);
					this.SendPropertyChanging();
					this._SellingPriceExclusive = value;
					this.SendPropertyChanged("SellingPriceExclusive");
					this.OnSellingPriceExclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingTaxAmount", DbType="Decimal(18,8) NOT NULL")]
		public decimal SellingTaxAmount
		{
			get
			{
				return this._SellingTaxAmount;
			}
			set
			{
				if ((this._SellingTaxAmount != value))
				{
					this.OnSellingTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._SellingTaxAmount = value;
					this.SendPropertyChanged("SellingTaxAmount");
					this.OnSellingTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingPriceInclusive", DbType="Money NOT NULL")]
		public decimal SellingPriceInclusive
		{
			get
			{
				return this._SellingPriceInclusive;
			}
			set
			{
				if ((this._SellingPriceInclusive != value))
				{
					this.OnSellingPriceInclusiveChanging(value);
					this.SendPropertyChanging();
					this._SellingPriceInclusive = value;
					this.SendPropertyChanged("SellingPriceInclusive");
					this.OnSellingPriceInclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackLevels", DbType="Bit NOT NULL")]
		public bool TrackLevels
		{
			get
			{
				return this._TrackLevels;
			}
			set
			{
				if ((this._TrackLevels != value))
				{
					this.OnTrackLevelsChanging(value);
					this.SendPropertyChanging();
					this._TrackLevels = value;
					this.SendPropertyChanged("TrackLevels");
					this.OnTrackLevelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReOrderLevel", DbType="Int NOT NULL")]
		public int ReOrderLevel
		{
			get
			{
				return this._ReOrderLevel;
			}
			set
			{
				if ((this._ReOrderLevel != value))
				{
					this.OnReOrderLevelChanging(value);
					this.SendPropertyChanging();
					this._ReOrderLevel = value;
					this.SendPropertyChanged("ReOrderLevel");
					this.OnReOrderLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLevel", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaxLevel
		{
			get
			{
				return this._MaxLevel;
			}
			set
			{
				if ((this._MaxLevel != value))
				{
					this.OnMaxLevelChanging(value);
					this.SendPropertyChanging();
					this._MaxLevel = value;
					this.SendPropertyChanged("MaxLevel");
					this.OnMaxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnHand", DbType="Decimal(18,4) NOT NULL")]
		public decimal OnHand
		{
			get
			{
				return this._OnHand;
			}
			set
			{
				if ((this._OnHand != value))
				{
					this.OnOnHandChanging(value);
					this.SendPropertyChanging();
					this._OnHand = value;
					this.SendPropertyChanged("OnHand");
					this.OnOnHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discontinued", DbType="Bit NOT NULL")]
		public bool Discontinued
		{
			get
			{
				return this._Discontinued;
			}
			set
			{
				if ((this._Discontinued != value))
				{
					this.OnDiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._Discontinued = value;
					this.SendPropertyChanged("Discontinued");
					this.OnDiscontinuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageInterval", DbType="VarChar(200)")]
		public string DosageInterval
		{
			get
			{
				return this._DosageInterval;
			}
			set
			{
				if ((this._DosageInterval != value))
				{
					this.OnDosageIntervalChanging(value);
					this.SendPropertyChanging();
					this._DosageInterval = value;
					this.SendPropertyChanged("DosageInterval");
					this.OnDosageIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderFactor", DbType="Int NOT NULL")]
		public int OrderFactor
		{
			get
			{
				return this._OrderFactor;
			}
			set
			{
				if ((this._OrderFactor != value))
				{
					this.OnOrderFactorChanging(value);
					this.SendPropertyChanging();
					this._OrderFactor = value;
					this.SendPropertyChanged("OrderFactor");
					this.OnOrderFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FactorName
		{
			get
			{
				return this._FactorName;
			}
			set
			{
				if ((this._FactorName != value))
				{
					this.OnFactorNameChanging(value);
					this.SendPropertyChanging();
					this._FactorName = value;
					this.SendPropertyChanged("FactorName");
					this.OnFactorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateSaleReminder", DbType="Bit NOT NULL")]
		public bool CreateSaleReminder
		{
			get
			{
				return this._CreateSaleReminder;
			}
			set
			{
				if ((this._CreateSaleReminder != value))
				{
					this.OnCreateSaleReminderChanging(value);
					this.SendPropertyChanging();
					this._CreateSaleReminder = value;
					this.SendPropertyChanged("CreateSaleReminder");
					this.OnCreateSaleReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderMessage", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ReminderMessage
		{
			get
			{
				return this._ReminderMessage;
			}
			set
			{
				if ((this._ReminderMessage != value))
				{
					this.OnReminderMessageChanging(value);
					this.SendPropertyChanging();
					this._ReminderMessage = value;
					this.SendPropertyChanged("ReminderMessage");
					this.OnReminderMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderDays", DbType="Int NOT NULL")]
		public int ReminderDays
		{
			get
			{
				return this._ReminderDays;
			}
			set
			{
				if ((this._ReminderDays != value))
				{
					this.OnReminderDaysChanging(value);
					this.SendPropertyChanging();
					this._ReminderDays = value;
					this.SendPropertyChanged("ReminderDays");
					this.OnReminderDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderLeadDays", DbType="Int NOT NULL")]
		public int ReminderLeadDays
		{
			get
			{
				return this._ReminderLeadDays;
			}
			set
			{
				if ((this._ReminderLeadDays != value))
				{
					this.OnReminderLeadDaysChanging(value);
					this.SendPropertyChanging();
					this._ReminderLeadDays = value;
					this.SendPropertyChanged("ReminderLeadDays");
					this.OnReminderLeadDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyLoyalty", DbType="Bit NOT NULL")]
		public bool ApplyLoyalty
		{
			get
			{
				return this._ApplyLoyalty;
			}
			set
			{
				if ((this._ApplyLoyalty != value))
				{
					this.OnApplyLoyaltyChanging(value);
					this.SendPropertyChanging();
					this._ApplyLoyalty = value;
					this.SendPropertyChanged("ApplyLoyalty");
					this.OnApplyLoyaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBatch", DbType="Bit NOT NULL")]
		public bool CheckBatch
		{
			get
			{
				return this._CheckBatch;
			}
			set
			{
				if ((this._CheckBatch != value))
				{
					this.OnCheckBatchChanging(value);
					this.SendPropertyChanging();
					this._CheckBatch = value;
					this.SendPropertyChanged("CheckBatch");
					this.OnCheckBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_InventoryCategory", Storage="_InventoryCategories", ThisKey="CategoryID", OtherKey="ID")]
		public EntitySet<InventoryCategory> InventoryCategories
		{
			get
			{
				return this._InventoryCategories;
			}
			set
			{
				this._InventoryCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SaleDetail_Inventory", Storage="_SaleDetail", ThisKey="ID", OtherKey="InventoryID", IsForeignKey=true)]
		public SaleDetail SaleDetail
		{
			get
			{
				return this._SaleDetail.Entity;
			}
			set
			{
				SaleDetail previousValue = this._SaleDetail.Entity;
				if (((previousValue != value) 
							|| (this._SaleDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SaleDetail.Entity = null;
						previousValue.Inventories.Remove(this);
					}
					this._SaleDetail.Entity = value;
					if ((value != null))
					{
						value.Inventories.Add(this);
						this._ID = value.InventoryID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("SaleDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventoryCategories(InventoryCategory entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = this;
		}
		
		private void detach_InventoryCategories(InventoryCategory entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryCategory")]
	public partial class InventoryCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsService;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private EntityRef<Inventory> _Inventory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsServiceChanging(bool value);
    partial void OnIsServiceChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public InventoryCategory()
		{
			this._Inventory = default(EntityRef<Inventory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Inventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsService", DbType="Bit NOT NULL")]
		public bool IsService
		{
			get
			{
				return this._IsService;
			}
			set
			{
				if ((this._IsService != value))
				{
					this.OnIsServiceChanging(value);
					this.SendPropertyChanging();
					this._IsService = value;
					this.SendPropertyChanged("IsService");
					this.OnIsServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_InventoryCategory", Storage="_Inventory", ThisKey="ID", OtherKey="CategoryID", IsForeignKey=true)]
		public Inventory Inventory
		{
			get
			{
				return this._Inventory.Entity;
			}
			set
			{
				Inventory previousValue = this._Inventory.Entity;
				if (((previousValue != value) 
							|| (this._Inventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory.Entity = null;
						previousValue.InventoryCategories.Remove(this);
					}
					this._Inventory.Entity = value;
					if ((value != null))
					{
						value.InventoryCategories.Add(this);
						this._ID = value.CategoryID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Inventory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SaleDetail")]
	public partial class SaleDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TypeID;
		
		private int _SaleID;
		
		private System.Nullable<int> _BatchID;
		
		private System.DateTime _SaleDate;
		
		private decimal _Quantity;
		
		private int _InventoryID;
		
		private string _Unit;
		
		private decimal _SellingPriceExclusive;
		
		private System.Nullable<decimal> _TaxPercentage;
		
		private decimal _TaxAmount;
		
		private decimal _SellingPriceInclusive;
		
		private System.Nullable<decimal> _DiscountPercentage;
		
		private decimal _Discount;
		
		private decimal _Nett;
		
		private string _Comment;
		
		private System.Nullable<int> _PatientID;
		
		private System.Nullable<int> _PatientTreatmentID;
		
		private System.Nullable<int> _UserID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private System.Nullable<int> _MoneyBackInvID;
		
		private EntitySet<Inventory> _Inventories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnSaleIDChanging(int value);
    partial void OnSaleIDChanged();
    partial void OnBatchIDChanging(System.Nullable<int> value);
    partial void OnBatchIDChanged();
    partial void OnSaleDateChanging(System.DateTime value);
    partial void OnSaleDateChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnInventoryIDChanging(int value);
    partial void OnInventoryIDChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnSellingPriceExclusiveChanging(decimal value);
    partial void OnSellingPriceExclusiveChanged();
    partial void OnTaxPercentageChanging(System.Nullable<decimal> value);
    partial void OnTaxPercentageChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnSellingPriceInclusiveChanging(decimal value);
    partial void OnSellingPriceInclusiveChanged();
    partial void OnDiscountPercentageChanging(System.Nullable<decimal> value);
    partial void OnDiscountPercentageChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnNettChanging(decimal value);
    partial void OnNettChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnPatientTreatmentIDChanging(System.Nullable<int> value);
    partial void OnPatientTreatmentIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    partial void OnMoneyBackInvIDChanging(System.Nullable<int> value);
    partial void OnMoneyBackInvIDChanged();
    #endregion
		
		public SaleDetail()
		{
			this._Inventories = new EntitySet<Inventory>(new Action<Inventory>(this.attach_Inventories), new Action<Inventory>(this.detach_Inventories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleID", DbType="Int NOT NULL")]
		public int SaleID
		{
			get
			{
				return this._SaleID;
			}
			set
			{
				if ((this._SaleID != value))
				{
					this.OnSaleIDChanging(value);
					this.SendPropertyChanging();
					this._SaleID = value;
					this.SendPropertyChanged("SaleID");
					this.OnSaleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="Int")]
		public System.Nullable<int> BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleDate", DbType="DateTime NOT NULL")]
		public System.DateTime SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this.OnSaleDateChanging(value);
					this.SendPropertyChanging();
					this._SaleDate = value;
					this.SendPropertyChanged("SaleDate");
					this.OnSaleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int NOT NULL")]
		public int InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingPriceExclusive", DbType="Money NOT NULL")]
		public decimal SellingPriceExclusive
		{
			get
			{
				return this._SellingPriceExclusive;
			}
			set
			{
				if ((this._SellingPriceExclusive != value))
				{
					this.OnSellingPriceExclusiveChanging(value);
					this.SendPropertyChanging();
					this._SellingPriceExclusive = value;
					this.SendPropertyChanged("SellingPriceExclusive");
					this.OnSellingPriceExclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercentage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TaxPercentage
		{
			get
			{
				return this._TaxPercentage;
			}
			set
			{
				if ((this._TaxPercentage != value))
				{
					this.OnTaxPercentageChanging(value);
					this.SendPropertyChanging();
					this._TaxPercentage = value;
					this.SendPropertyChanged("TaxPercentage");
					this.OnTaxPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,8) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingPriceInclusive", DbType="Money NOT NULL")]
		public decimal SellingPriceInclusive
		{
			get
			{
				return this._SellingPriceInclusive;
			}
			set
			{
				if ((this._SellingPriceInclusive != value))
				{
					this.OnSellingPriceInclusiveChanging(value);
					this.SendPropertyChanging();
					this._SellingPriceInclusive = value;
					this.SendPropertyChanged("SellingPriceInclusive");
					this.OnSellingPriceInclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this.OnDiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercentage = value;
					this.SendPropertyChanged("DiscountPercentage");
					this.OnDiscountPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nett", DbType="Money NOT NULL")]
		public decimal Nett
		{
			get
			{
				return this._Nett;
			}
			set
			{
				if ((this._Nett != value))
				{
					this.OnNettChanging(value);
					this.SendPropertyChanging();
					this._Nett = value;
					this.SendPropertyChanged("Nett");
					this.OnNettChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
		public System.Nullable<int> PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientTreatmentID", DbType="Int")]
		public System.Nullable<int> PatientTreatmentID
		{
			get
			{
				return this._PatientTreatmentID;
			}
			set
			{
				if ((this._PatientTreatmentID != value))
				{
					this.OnPatientTreatmentIDChanging(value);
					this.SendPropertyChanging();
					this._PatientTreatmentID = value;
					this.SendPropertyChanged("PatientTreatmentID");
					this.OnPatientTreatmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyBackInvID", DbType="Int")]
		public System.Nullable<int> MoneyBackInvID
		{
			get
			{
				return this._MoneyBackInvID;
			}
			set
			{
				if ((this._MoneyBackInvID != value))
				{
					this.OnMoneyBackInvIDChanging(value);
					this.SendPropertyChanging();
					this._MoneyBackInvID = value;
					this.SendPropertyChanged("MoneyBackInvID");
					this.OnMoneyBackInvIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SaleDetail_Inventory", Storage="_Inventories", ThisKey="InventoryID", OtherKey="ID")]
		public EntitySet<Inventory> Inventories
		{
			get
			{
				return this._Inventories;
			}
			set
			{
				this._Inventories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventories(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.SaleDetail = this;
		}
		
		private void detach_Inventories(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.SaleDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyInfo")]
	public partial class CompanyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _RegistrationNumber;
		
		private string _SiteNo;
		
		private string _PostalLine1;
		
		private string _PostalLine2;
		
		private string _PostalLine3;
		
		private string _PostalLine4;
		
		private string _PhysicalLine1;
		
		private string _PhysicalLine2;
		
		private string _PhysicalLine3;
		
		private string _PhysicalLine4;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Emergency;
		
		private string _EMail;
		
		private string _Website;
		
		private string _VATRegNumber;
		
		private string _TradingHours;
		
		private string _PromoMessage;
		
		private string _QuickSaleMessage;
		
		private string _InvoiceMessage;
		
		private string _StatementMessage;
		
		private string _ReceiptMessage;
		
		private string _EstimateMessage;
		
		private System.Data.Linq.Binary _Logo;
		
		private string _BankingDetails;
		
		private string _POBillTo;
		
		private string _PODeliverTo;
		
		private decimal _Rounding;
		
		private decimal _InventoryPriceRounding;
		
		private string _BarCodeType;
		
		private string _AttachmentFolder;
		
		private string _MailServer;
		
		private System.Nullable<int> _MailServerPort;
		
		private string _MailUsername;
		
		private string _MailPassword;
		
		private System.Nullable<bool> _MailEnableSSL;
		
		private string _SmsUser;
		
		private string _SmsPassword;
		
		private string _BackupDirectory;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private int _BranchID;
		
		private bool _AutoAttach;
		
		private bool _UseBatches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegistrationNumberChanging(string value);
    partial void OnRegistrationNumberChanged();
    partial void OnSiteNoChanging(string value);
    partial void OnSiteNoChanged();
    partial void OnPostalLine1Changing(string value);
    partial void OnPostalLine1Changed();
    partial void OnPostalLine2Changing(string value);
    partial void OnPostalLine2Changed();
    partial void OnPostalLine3Changing(string value);
    partial void OnPostalLine3Changed();
    partial void OnPostalLine4Changing(string value);
    partial void OnPostalLine4Changed();
    partial void OnPhysicalLine1Changing(string value);
    partial void OnPhysicalLine1Changed();
    partial void OnPhysicalLine2Changing(string value);
    partial void OnPhysicalLine2Changed();
    partial void OnPhysicalLine3Changing(string value);
    partial void OnPhysicalLine3Changed();
    partial void OnPhysicalLine4Changing(string value);
    partial void OnPhysicalLine4Changed();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmergencyChanging(string value);
    partial void OnEmergencyChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnVATRegNumberChanging(string value);
    partial void OnVATRegNumberChanged();
    partial void OnTradingHoursChanging(string value);
    partial void OnTradingHoursChanged();
    partial void OnPromoMessageChanging(string value);
    partial void OnPromoMessageChanged();
    partial void OnQuickSaleMessageChanging(string value);
    partial void OnQuickSaleMessageChanged();
    partial void OnInvoiceMessageChanging(string value);
    partial void OnInvoiceMessageChanged();
    partial void OnStatementMessageChanging(string value);
    partial void OnStatementMessageChanged();
    partial void OnReceiptMessageChanging(string value);
    partial void OnReceiptMessageChanged();
    partial void OnEstimateMessageChanging(string value);
    partial void OnEstimateMessageChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    partial void OnBankingDetailsChanging(string value);
    partial void OnBankingDetailsChanged();
    partial void OnPOBillToChanging(string value);
    partial void OnPOBillToChanged();
    partial void OnPODeliverToChanging(string value);
    partial void OnPODeliverToChanged();
    partial void OnRoundingChanging(decimal value);
    partial void OnRoundingChanged();
    partial void OnInventoryPriceRoundingChanging(decimal value);
    partial void OnInventoryPriceRoundingChanged();
    partial void OnBarCodeTypeChanging(string value);
    partial void OnBarCodeTypeChanged();
    partial void OnAttachmentFolderChanging(string value);
    partial void OnAttachmentFolderChanged();
    partial void OnMailServerChanging(string value);
    partial void OnMailServerChanged();
    partial void OnMailServerPortChanging(System.Nullable<int> value);
    partial void OnMailServerPortChanged();
    partial void OnMailUsernameChanging(string value);
    partial void OnMailUsernameChanged();
    partial void OnMailPasswordChanging(string value);
    partial void OnMailPasswordChanged();
    partial void OnMailEnableSSLChanging(System.Nullable<bool> value);
    partial void OnMailEnableSSLChanged();
    partial void OnSmsUserChanging(string value);
    partial void OnSmsUserChanged();
    partial void OnSmsPasswordChanging(string value);
    partial void OnSmsPasswordChanged();
    partial void OnBackupDirectoryChanging(string value);
    partial void OnBackupDirectoryChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnAutoAttachChanging(bool value);
    partial void OnAutoAttachChanged();
    partial void OnUseBatchesChanging(bool value);
    partial void OnUseBatchesChanged();
    #endregion
		
		public CompanyInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumber", DbType="VarChar(50)")]
		public string RegistrationNumber
		{
			get
			{
				return this._RegistrationNumber;
			}
			set
			{
				if ((this._RegistrationNumber != value))
				{
					this.OnRegistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumber = value;
					this.SendPropertyChanged("RegistrationNumber");
					this.OnRegistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteNo", DbType="VarChar(50)")]
		public string SiteNo
		{
			get
			{
				return this._SiteNo;
			}
			set
			{
				if ((this._SiteNo != value))
				{
					this.OnSiteNoChanging(value);
					this.SendPropertyChanging();
					this._SiteNo = value;
					this.SendPropertyChanged("SiteNo");
					this.OnSiteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine1", DbType="VarChar(100)")]
		public string PostalLine1
		{
			get
			{
				return this._PostalLine1;
			}
			set
			{
				if ((this._PostalLine1 != value))
				{
					this.OnPostalLine1Changing(value);
					this.SendPropertyChanging();
					this._PostalLine1 = value;
					this.SendPropertyChanged("PostalLine1");
					this.OnPostalLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine2", DbType="VarChar(100)")]
		public string PostalLine2
		{
			get
			{
				return this._PostalLine2;
			}
			set
			{
				if ((this._PostalLine2 != value))
				{
					this.OnPostalLine2Changing(value);
					this.SendPropertyChanging();
					this._PostalLine2 = value;
					this.SendPropertyChanged("PostalLine2");
					this.OnPostalLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine3", DbType="VarChar(100)")]
		public string PostalLine3
		{
			get
			{
				return this._PostalLine3;
			}
			set
			{
				if ((this._PostalLine3 != value))
				{
					this.OnPostalLine3Changing(value);
					this.SendPropertyChanging();
					this._PostalLine3 = value;
					this.SendPropertyChanged("PostalLine3");
					this.OnPostalLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine4", DbType="VarChar(100)")]
		public string PostalLine4
		{
			get
			{
				return this._PostalLine4;
			}
			set
			{
				if ((this._PostalLine4 != value))
				{
					this.OnPostalLine4Changing(value);
					this.SendPropertyChanging();
					this._PostalLine4 = value;
					this.SendPropertyChanged("PostalLine4");
					this.OnPostalLine4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine1", DbType="VarChar(100)")]
		public string PhysicalLine1
		{
			get
			{
				return this._PhysicalLine1;
			}
			set
			{
				if ((this._PhysicalLine1 != value))
				{
					this.OnPhysicalLine1Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine1 = value;
					this.SendPropertyChanged("PhysicalLine1");
					this.OnPhysicalLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine2", DbType="VarChar(100)")]
		public string PhysicalLine2
		{
			get
			{
				return this._PhysicalLine2;
			}
			set
			{
				if ((this._PhysicalLine2 != value))
				{
					this.OnPhysicalLine2Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine2 = value;
					this.SendPropertyChanged("PhysicalLine2");
					this.OnPhysicalLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine3", DbType="VarChar(100)")]
		public string PhysicalLine3
		{
			get
			{
				return this._PhysicalLine3;
			}
			set
			{
				if ((this._PhysicalLine3 != value))
				{
					this.OnPhysicalLine3Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine3 = value;
					this.SendPropertyChanged("PhysicalLine3");
					this.OnPhysicalLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine4", DbType="VarChar(100)")]
		public string PhysicalLine4
		{
			get
			{
				return this._PhysicalLine4;
			}
			set
			{
				if ((this._PhysicalLine4 != value))
				{
					this.OnPhysicalLine4Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine4 = value;
					this.SendPropertyChanged("PhysicalLine4");
					this.OnPhysicalLine4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(100)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emergency", DbType="VarChar(100)")]
		public string Emergency
		{
			get
			{
				return this._Emergency;
			}
			set
			{
				if ((this._Emergency != value))
				{
					this.OnEmergencyChanging(value);
					this.SendPropertyChanging();
					this._Emergency = value;
					this.SendPropertyChanged("Emergency");
					this.OnEmergencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="VarChar(100)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(100)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATRegNumber", DbType="VarChar(100)")]
		public string VATRegNumber
		{
			get
			{
				return this._VATRegNumber;
			}
			set
			{
				if ((this._VATRegNumber != value))
				{
					this.OnVATRegNumberChanging(value);
					this.SendPropertyChanging();
					this._VATRegNumber = value;
					this.SendPropertyChanged("VATRegNumber");
					this.OnVATRegNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradingHours", DbType="VarChar(500)")]
		public string TradingHours
		{
			get
			{
				return this._TradingHours;
			}
			set
			{
				if ((this._TradingHours != value))
				{
					this.OnTradingHoursChanging(value);
					this.SendPropertyChanging();
					this._TradingHours = value;
					this.SendPropertyChanged("TradingHours");
					this.OnTradingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoMessage", DbType="VarChar(500)")]
		public string PromoMessage
		{
			get
			{
				return this._PromoMessage;
			}
			set
			{
				if ((this._PromoMessage != value))
				{
					this.OnPromoMessageChanging(value);
					this.SendPropertyChanging();
					this._PromoMessage = value;
					this.SendPropertyChanged("PromoMessage");
					this.OnPromoMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickSaleMessage", DbType="VarChar(500)")]
		public string QuickSaleMessage
		{
			get
			{
				return this._QuickSaleMessage;
			}
			set
			{
				if ((this._QuickSaleMessage != value))
				{
					this.OnQuickSaleMessageChanging(value);
					this.SendPropertyChanging();
					this._QuickSaleMessage = value;
					this.SendPropertyChanged("QuickSaleMessage");
					this.OnQuickSaleMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceMessage", DbType="VarChar(500)")]
		public string InvoiceMessage
		{
			get
			{
				return this._InvoiceMessage;
			}
			set
			{
				if ((this._InvoiceMessage != value))
				{
					this.OnInvoiceMessageChanging(value);
					this.SendPropertyChanging();
					this._InvoiceMessage = value;
					this.SendPropertyChanged("InvoiceMessage");
					this.OnInvoiceMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatementMessage", DbType="VarChar(500)")]
		public string StatementMessage
		{
			get
			{
				return this._StatementMessage;
			}
			set
			{
				if ((this._StatementMessage != value))
				{
					this.OnStatementMessageChanging(value);
					this.SendPropertyChanging();
					this._StatementMessage = value;
					this.SendPropertyChanged("StatementMessage");
					this.OnStatementMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptMessage", DbType="VarChar(500)")]
		public string ReceiptMessage
		{
			get
			{
				return this._ReceiptMessage;
			}
			set
			{
				if ((this._ReceiptMessage != value))
				{
					this.OnReceiptMessageChanging(value);
					this.SendPropertyChanging();
					this._ReceiptMessage = value;
					this.SendPropertyChanged("ReceiptMessage");
					this.OnReceiptMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateMessage", DbType="VarChar(500)")]
		public string EstimateMessage
		{
			get
			{
				return this._EstimateMessage;
			}
			set
			{
				if ((this._EstimateMessage != value))
				{
					this.OnEstimateMessageChanging(value);
					this.SendPropertyChanging();
					this._EstimateMessage = value;
					this.SendPropertyChanged("EstimateMessage");
					this.OnEstimateMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankingDetails", DbType="VarChar(500)")]
		public string BankingDetails
		{
			get
			{
				return this._BankingDetails;
			}
			set
			{
				if ((this._BankingDetails != value))
				{
					this.OnBankingDetailsChanging(value);
					this.SendPropertyChanging();
					this._BankingDetails = value;
					this.SendPropertyChanged("BankingDetails");
					this.OnBankingDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POBillTo", DbType="VarChar(400)")]
		public string POBillTo
		{
			get
			{
				return this._POBillTo;
			}
			set
			{
				if ((this._POBillTo != value))
				{
					this.OnPOBillToChanging(value);
					this.SendPropertyChanging();
					this._POBillTo = value;
					this.SendPropertyChanged("POBillTo");
					this.OnPOBillToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODeliverTo", DbType="VarChar(400)")]
		public string PODeliverTo
		{
			get
			{
				return this._PODeliverTo;
			}
			set
			{
				if ((this._PODeliverTo != value))
				{
					this.OnPODeliverToChanging(value);
					this.SendPropertyChanging();
					this._PODeliverTo = value;
					this.SendPropertyChanged("PODeliverTo");
					this.OnPODeliverToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rounding", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rounding
		{
			get
			{
				return this._Rounding;
			}
			set
			{
				if ((this._Rounding != value))
				{
					this.OnRoundingChanging(value);
					this.SendPropertyChanging();
					this._Rounding = value;
					this.SendPropertyChanged("Rounding");
					this.OnRoundingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryPriceRounding", DbType="Decimal(18,2) NOT NULL")]
		public decimal InventoryPriceRounding
		{
			get
			{
				return this._InventoryPriceRounding;
			}
			set
			{
				if ((this._InventoryPriceRounding != value))
				{
					this.OnInventoryPriceRoundingChanging(value);
					this.SendPropertyChanging();
					this._InventoryPriceRounding = value;
					this.SendPropertyChanged("InventoryPriceRounding");
					this.OnInventoryPriceRoundingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCodeType", DbType="VarChar(50)")]
		public string BarCodeType
		{
			get
			{
				return this._BarCodeType;
			}
			set
			{
				if ((this._BarCodeType != value))
				{
					this.OnBarCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._BarCodeType = value;
					this.SendPropertyChanged("BarCodeType");
					this.OnBarCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFolder", DbType="VarChar(200)")]
		public string AttachmentFolder
		{
			get
			{
				return this._AttachmentFolder;
			}
			set
			{
				if ((this._AttachmentFolder != value))
				{
					this.OnAttachmentFolderChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFolder = value;
					this.SendPropertyChanged("AttachmentFolder");
					this.OnAttachmentFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailServer", DbType="VarChar(128)")]
		public string MailServer
		{
			get
			{
				return this._MailServer;
			}
			set
			{
				if ((this._MailServer != value))
				{
					this.OnMailServerChanging(value);
					this.SendPropertyChanging();
					this._MailServer = value;
					this.SendPropertyChanged("MailServer");
					this.OnMailServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailServerPort", DbType="Int")]
		public System.Nullable<int> MailServerPort
		{
			get
			{
				return this._MailServerPort;
			}
			set
			{
				if ((this._MailServerPort != value))
				{
					this.OnMailServerPortChanging(value);
					this.SendPropertyChanging();
					this._MailServerPort = value;
					this.SendPropertyChanged("MailServerPort");
					this.OnMailServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailUsername", DbType="VarChar(128)")]
		public string MailUsername
		{
			get
			{
				return this._MailUsername;
			}
			set
			{
				if ((this._MailUsername != value))
				{
					this.OnMailUsernameChanging(value);
					this.SendPropertyChanging();
					this._MailUsername = value;
					this.SendPropertyChanged("MailUsername");
					this.OnMailUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailPassword", DbType="VarChar(128)")]
		public string MailPassword
		{
			get
			{
				return this._MailPassword;
			}
			set
			{
				if ((this._MailPassword != value))
				{
					this.OnMailPasswordChanging(value);
					this.SendPropertyChanging();
					this._MailPassword = value;
					this.SendPropertyChanged("MailPassword");
					this.OnMailPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailEnableSSL", DbType="Bit")]
		public System.Nullable<bool> MailEnableSSL
		{
			get
			{
				return this._MailEnableSSL;
			}
			set
			{
				if ((this._MailEnableSSL != value))
				{
					this.OnMailEnableSSLChanging(value);
					this.SendPropertyChanging();
					this._MailEnableSSL = value;
					this.SendPropertyChanged("MailEnableSSL");
					this.OnMailEnableSSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsUser", DbType="VarChar(50)")]
		public string SmsUser
		{
			get
			{
				return this._SmsUser;
			}
			set
			{
				if ((this._SmsUser != value))
				{
					this.OnSmsUserChanging(value);
					this.SendPropertyChanging();
					this._SmsUser = value;
					this.SendPropertyChanged("SmsUser");
					this.OnSmsUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsPassword", DbType="VarChar(50)")]
		public string SmsPassword
		{
			get
			{
				return this._SmsPassword;
			}
			set
			{
				if ((this._SmsPassword != value))
				{
					this.OnSmsPasswordChanging(value);
					this.SendPropertyChanging();
					this._SmsPassword = value;
					this.SendPropertyChanged("SmsPassword");
					this.OnSmsPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackupDirectory", DbType="VarChar(255)")]
		public string BackupDirectory
		{
			get
			{
				return this._BackupDirectory;
			}
			set
			{
				if ((this._BackupDirectory != value))
				{
					this.OnBackupDirectoryChanging(value);
					this.SendPropertyChanging();
					this._BackupDirectory = value;
					this.SendPropertyChanged("BackupDirectory");
					this.OnBackupDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoAttach", DbType="Bit NOT NULL")]
		public bool AutoAttach
		{
			get
			{
				return this._AutoAttach;
			}
			set
			{
				if ((this._AutoAttach != value))
				{
					this.OnAutoAttachChanging(value);
					this.SendPropertyChanging();
					this._AutoAttach = value;
					this.SendPropertyChanged("AutoAttach");
					this.OnAutoAttachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseBatches", DbType="Bit NOT NULL")]
		public bool UseBatches
		{
			get
			{
				return this._UseBatches;
			}
			set
			{
				if ((this._UseBatches != value))
				{
					this.OnUseBatchesChanging(value);
					this.SendPropertyChanging();
					this._UseBatches = value;
					this.SendPropertyChanged("UseBatches");
					this.OnUseBatchesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
